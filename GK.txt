import { createContext, useContext, useState, useEffect } from "react";
//1. Create a context
const CartContext = createContext();
//2. Create a provider
export const CartProvider = ({ children }) => {
    //3. Use state to store data
    const [cart, setCart] = useState(() => {
        const localData = localStorage.getItem('cart');
        return localData ? JSON.parse(localData) : [];
    });
    //4. Use effect to update local storage
    useEffect(() => {
        localStorage.setItem('cart', JSON.stringify(cart));
    }, [cart]);
    //5. Thêm sản phẩm vào giỏ hàng
    const addToCart = (product) => {
        setCart((prevCart) => {
            const existingProduct = prevCart.find((item) => item.id === product.id);
            if (existingProduct) {
                return prevCart.map((item) =>
                    item.id === product.id ? { ...item, quantity: item.quantity + 1 } : item
                );
            }
            return [...prevCart, { ...product, quantity: 1 }];
        });
    }
    //6. Xóa sản phẩm khỏi giỏ hàng
    const removeFromCart = (id) => {
        setCart((prevCart) => {
            //Sao chép giỏ hàng cũ
            const newCart = prevCart.map((item) => ({ ...item }));
            //Lọc ra sản phẩm cần xóa
            const index = newCart.findIndex((item) => item.id === id);
            if (index >= 0) {
                newCart.splice(index, 1);
            }
            return newCart;
        });
    }
    //7.Tổng số lượng sản phẩm
    const totalItems = cart.length;
    //8. Tổng tiền
    const totalAmount = cart.reduce((total, item) => total + item.price * item.quantity, 0);
    //9. Tạo context value
    const contextValue = { cart, addToCart, removeFromCart, totalItems, totalAmount };
    //10. Return provider
    return <CartContext.Provider value={contextValue}>{children}</CartContext.Provider>;
}
//11. Custom hook
export const useCart = () => {
    return useContext(CartContext);
}

import React, { useState } from 'react'
import { data } from '../data/data.js'
import { useNavigate } from 'react-router-dom'
import { useCart } from './CartContext.jsx'
import './Booklist.css'
const Booklist = () => {
    const navigate = useNavigate()
    const [book, setBook] = useState(null)
    const handleDetail = (book) => {
        setBook(book)
        navigate('/bookdetail/' + book.id)
    }
    const { addToCart } = useCart()
    return (
        <div>
            <h1>Booklist</h1>
            <div className='booklist'>
                {data.map((item, index) => {
                    return (
                        <div key={index} className='book'>
                            <img src={item.img} alt="" />
                            <h2>{item.title}</h2>
                            <p>{item.author}</p>
                            <p>{item.price}</p>
                            <button onClick={() => handleDetail(item)}>Detail</button>
                            <button onClick={() => addToCart(item)}>Add to cart</button>
                        </div>
                    )
                }
                )}
            </div>
        </div>
    )
}


export default Booklist
import React from 'react'
import { useParams } from 'react-router-dom'
import { data } from '../data/data'
import { useCart } from '../component/CartContext'
const BookDetail = () => {
    const { id } = useParams()
    const book = data.find(item => item.id === parseInt(id))
    const { addToCart } = useCart()
    return (
        <div>
            <h1>Book Detail</h1>
            <img src={book.img}
                alt="" />
            <h2>{book.title}</h2>
            <p>{book.author}</p>
            <p>{book.price}</p>
            <button onClick={() => addToCart(book)}>Add to cart</button>
        </div>
    )
}

export default BookDetail
import React from 'react'
import { useCart } from '../component/CartContext'
const Cart = () => {
    const { cart, addToCart, removeFromCart, totalItems, totalAmount } = useCart();
    const hanleCheckout = () => {
        if (cart.length === 0) {
            alert('Your cart is empty')
        } else {
            alert('Checkout success')
        }
    }
    return (
        <div>
            <h1>Cart</h1>
            <h2>Total Items: {totalItems}</h2>
            <h2>Total Amount: {totalAmount}</h2>
            <button onClick={hanleCheckout}>Checkout</button>
            {cart.length === 0 ? (<h3>Your cart is empty</h3>) :
                (cart.map(item => (
                    <div key={item.id}
                        style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', margin: '5px 0', padding: '5px', border: '1px solid #ccc' }}>
                        <img src={item.img}
                            alt="" />
                        <h3>{item.title}</h3>
                        <p>{item.author}</p>
                        <p>{item.price}</p>
                        <button onClick={() => removeFromCart(item.id)}>Remove</button>
                    </div>
                )))
            }
        </div >
    )
}

export default Cart
import 'bootstrap/dist/css/bootstrap.min.css'
import 'bootstrap/dist/js/bootstrap.bundle.min'
import { useState } from 'react'
import reactLogo from './assets/react.svg'
import viteLogo from '/vite.svg'
import './App.css'
import { BrowserRouter, Routes, Route } from 'react-router-dom'
import NotFound from './page/NotFound'
import Header from './component/Header'
import Footer from './component/Footer'
import Home from './page/Home'
import Cart from './page/Cart'
import BookDetail from './page/BookDetail'
import { CartProvider } from './component/CartContext'
function App() {
  const [count, setCount] = useState(0)

  return (
    <>
      <CartProvider>
        <Header />
        <BrowserRouter>
          <Routes>
            <Route path='/' element={<Home />} />
            <Route path='/cart' element={<Cart />} />
            <Route path='/bookdetail/:id' element={<BookDetail />} />
            <Route path='*' element={<NotFound />} />
          </Routes>
        </BrowserRouter>
        <Footer />
      </CartProvider>
    </>
  )
}

export default App

import React from 'react'
import { data } from '../data/data.js'
import { useCart } from '../component/CartContext.jsx'
import { Link, useNavigate } from 'react-router-dom'
import Book from './Book.jsx'
const Booklist = () => {
    const { cart, addToCart } = useCart()
    const navigate = useNavigate()
    const handleDetail = (book) => {
        navigate(`/bookdetail/${book.id}`)
    }
    return (
        <div>
            <h1>BookList</h1>
            <div>
                {
                    data.map((book) => {
                        return (
                            // <div key={book.id}>
                            //     <img src={book.img} alt="" />
                            //     <h3>{book.name}</h3>
                            //     <p>{book.author}</p>
                            //     <p>{book.price}</p>
                            //     <button onClick={() => addToCart(book)}>AddtoCart</button>
                            //     <button onClick={() => handleDetail(book)}>Detail</button>
                            // </div>
                            <Link to={`/bookdetail/${book.id}`} > <Book book={book}></Book></Link>
                        )
                    })
                }
            </div>
        </div >
    )
}

export default Booklist

import React from 'react'

const Book = ({ book }) => {
    return (
        <div>
            <img src={book.img} alt="" />
            <h3>{book.name}</h3>
            <p>{book.author}</p>
            <p>{book.price}</p>
            <button onClick={() => addToCart(book)}>AddtoCart</button>
            <button onClick={() => handleDetail(book)}>Detail</button>
        </div>
    )
}

export default Book
